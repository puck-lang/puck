///// Trait functions must have a return type
type Type {
  value: Num
}

impl Type {
  fn isAnswer(self) {
    self.value == 42
  }
}

///// Type has already been implemented
type Type {
  value: Num
}

impl Type {
  fn isAnswer(self) -> Bool {
    self.value == 42
  }
}

impl Type {
  fn isNegative(self) -> Bool {
    self.value < 0
  }
}

///// Num is not assignable to type String
type Type {
  value: Num
}

impl Type {
  fn getValue(self) -> String {
    self.value
  }
}

///// Use of undefined variable b
type Type {}

impl Type {
  fn a(self) -> String {
    b()
  }

  fn b(self) -> String {
    a()
  }
}

///// Type is not assignable to type Num
type Type {}

impl Type {
  fn a(self: Num) -> () {}
}

///// Type is not assignable to type Num
type Type {}
trait Trait {
  fn a(self) -> () {}
}

impl Trait for Type {
  fn a(self: Num) -> () {}
}

///// Static trait functions can not be implemented
type Type {}
trait Trait {
  fn a() -> () {}
}

impl Trait for Type {
  fn a() -> () {}
}
