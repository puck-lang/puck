type Type {
  value: Num
}

impl Type {
  fn isAnswer(self) -> Bool {
    self.value == 42
  }

  fn isNegative(self: Self, other: Self) -> Self {
    {value: self.value + other.value}
  }

  fn isAnswer2(self) -> Bool {
    self.isAnswer()
  }
}

let type_: Type = {value: 42}

type_.isAnswer()

trait Trait {
  fn a(self) -> () {}
}

impl Trait for Type {
  fn a(self: {value: Num}) -> () {}
}
