print(
  match Maybe::Just(5) {
    Maybe::Just(num) => '$num'
    Maybe::Nothing => 'nothing'
  }
)

print(
  match Result::Ok(5) {
    Result::Ok(num) => '$num'
    Result::Err(_) => 'error'
  }
)

print(
  match Result::Ok(5) {
    Result::Ok(num) => '$num'
    _ => 'error'
  }
)

print(match Maybe::Just(5) { Maybe::Just(num) => num, Maybe::Nothing => 0 })

print(
  match Maybe::Nothing {
    Maybe::Just(_) => 'someting'
    Maybe::Nothing => 'nothing'
  }
)

print(
  match Maybe::Nothing {
    _ => 'whatever'
  }
)

print(
  match Result::Err(5) {
    Result::Ok(_) => 'ok'
    Result::Err(err) => 'error: $err'
  }
)
fn sayHello(name: String) then print('Hello, $name')

match Maybe::Just('World') {
  Maybe::Just(name) => sayHello(name)
  Maybe::Nothing => print('Oh, nothing')
}

enum Value
  = One {value: String}
  | Two
  | Three

match Value::One({value: 'World'}) {
  Value::One {value} => sayHello(value)
  _ => print('Sorry')
}

match Value::Two {
  Value::Two => print('two')
  Value::Three => print('three')
  _ => print('Sorry')
}

match Value::Three {
  Value::Two => print('two')
  Value::Three => print('three')
  _ => print('Sorry')
}
