///// Num is not assignable to type String
fn a(a: String, b: Num) {}
a(1, 2)

///// func has already been declared in the scope
fn func() {}
fn func(a, b) {}

///// Too few arguments given to a, 3 required, 2 given
fn a(a, b, c) {}
a(1, 2)

///// Too many arguments given to a, 2 required, 3 given
fn a(a, b) {}
a(1, 2, 3)

///// Too many arguments given to a, 1 required, 2 given
let mut a: (Num) -> Bool
a(1, 2)

///// Too many arguments given to a, 1 required, 2 given
let a = fn (a) {}
a(1, 2)

///// Parameter b of function a requires a mutable binding but c is declared as immutable.
fn a(mut b) {}
let c = true
a(c)

///// Bool is not assignable to type Num
fn isEqual(a, b) -> Bool {a == b}
let max: Num = isEqual(1, 2)

///// String is not assignable to type Num
fn ident<T>(a: T) -> T {a}
let five: Num = ident('five')

///// String is not assignable to type Num
fn ident(a: String) {a}
let five: Num = ident('five')

///// Num is not assignable to type String
fn ident(a: String) -> String {5}

// TODO: Make these error by resolving the genrics
//// String is not assignable to type Num
// fn addFive(num: Num) {num}
// let list: List<String> = [].map(addFive)

//// String is not assignable to type Num
// fn addFive(num: Num) {num}
// [].map(|_| 'five').map(addFive)
