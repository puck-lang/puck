fn a() {}
fn b(a) {}
fn c(a = 1) {a}
fn d(a,b) {c(a)}
fn e(a,b) then d(a,b)
fn f(a,b) then fn c(a,b) then f(a,b)
fn g(a,b) {
  a()
  b()
  fn c() {
    fn g() then g()
    g()
  }
}

fn h(a: Num, b: String): Bool then a == b
fn i(a: Num, b: String): Bool {
  if a > 0 then return b
  a == b
}
fn j(a: Num, b: String) {
  a == b
}
fn k(a: Num, b) {
  a == b
}
fn l(a, b: String) {
  a == b
}
fn m(a, b): Bool {
  a == b
}
fn n(self) then self.toString()
fn o(mut self) then self.toString()
fn p(self, a) then self.toString()

a()
b(1)
c()
c(2)
