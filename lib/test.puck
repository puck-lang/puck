import '../lib/helpers.puck' as {cmd}

export fn buildAll(outFolder = 'dist', compiler = 'dist') {
  cmd(
    '$compiler/bin/puckc --out-dir $outFolder --skip-extension true --is-binary true bin/**/*.puck && ' +
    '$compiler/bin/puckc --out-dir $outFolder lib/**/*.puck'
  )
}

export fn buildTestCompiler() {
  cmd('rm -rf .tmp && mkdir -p .tmp/{old,new}/{bin,node_modules} .tmp/{old,new}/lib/compiler .tmp/{old,new}/lib/stdlib/{core,js}')
  buildAll('.tmp/old')
  cmd('cp dist/lib/compiler/{ast,emitter}.js .tmp/old/lib/compiler && \
    cp dist/lib/stdlib/core/js.js .tmp/old/lib/stdlib/core/ && \
    cp dist/lib/stdlib/js/js.js .tmp/old/lib/stdlib/js/ && \
    cp dist/lib/compiler/{ast,emitter}.js .tmp/new/lib/compiler/ && \
    cp dist/lib/stdlib/core/js.js .tmp/new/lib/stdlib/core/ && \
    cp dist/lib/stdlib/js/js.js .tmp/new/lib/stdlib/js/ && \
    mkdir .tmp/{old,new}/node_modules/puck-lang && \
    ln -s ../lib .tmp/lib && \
    ln -s ../../../old .tmp/old/node_modules/puck-lang/dist && \
    ln -s ../../../new .tmp/new/node_modules/puck-lang/dist\
  ')
}
