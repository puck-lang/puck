import 'puck:js' as {console, process, typeof}
import '../entities.puck' as {UnparsedFile}

export fn InputStream(file: UnparsedFile) {
  let code =
    if file.puck.substring(0, 13) == '//#![no_core]'
      then file.puck.slice(13)
      else "import 'puck:core' as *\n" + file.puck
  let mut pos = 0
  let mut line = 0
  let mut col = 1

  fn next() {
    let ch = code.charAt(pos)
    pos = pos + 1
    if (ch == '\n') {
      line = line + 1
      col = 1
    } else {
      col = col + 1
    }
    ch
  }

  fn peek(distance = 0) {
    code.charAt(pos + distance)
  }

  fn eof() {
    peek() == ''
  }

  fn croak(msg) {
    throw Error(
      '$msg
    at ' + file.absolutePath + '  ($line:$col)\n\n')
    console.error(
      '$msg
    at ' + file.absolutePath + '  ($line:$col)\n\n'
    )
    process.exit(1)
  }

  {next, peek, eof, croak, file, getLine: || line, getCol: || col}
}
