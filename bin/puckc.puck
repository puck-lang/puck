let cmd = require('../lib/helpers').cmd
let flag = require('../lib/helpers').flag
let buildString = require('../lib/compiler').buildString
let build = require('../lib/compiler').build

let arguments = process.argv.takeFrom(fn (arg) {arg.indexOf('puckc') >= 0}).slice(1)

let outDir = flag(arguments, '--out-dir', 'dist')
let outFile = flag(arguments, '--out-file')
let extension = if flag(arguments, '--skip-extension') then '' else '.js'

if arguments.length > 1 and outFile {
  console.error("Can't specify --out-file with more than one input file")
  process.exit(1)
}

if arguments.length == 0 {
  let stdin = process.stdin
  let inputChunks = Array()

  stdin.resume()
  stdin.setEncoding('utf8')

  stdin.on('data', inputChunks.push)

  stdin.on('end', fn () {
    let puck = inputChunks.join()
    let js = buildString(puck)
    console.log(js)
  })
} else {
  let builds = arguments.map(fn (file) {
    let out = outFile or outDir + '/' + file.replace(RegExp('\\.puck'), extension)

    build(file, out)
      .catch(fn () {process.exit(1)})
  })

  Promise.all(builds)
}
