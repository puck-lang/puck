import 'node:path' as {join}
import '../lib/helpers' as {cmd, flag}
import '../lib/compiler' as {buildString, build}
import '../lib/stdlib/js' as {Array, RegExp, console, process}

let arguments = process.argv.takeFrom(fn (arg) {arg.indexOf('puckc') >= 0}).slice(1)

let outDir = flag(arguments, '--out-dir', 'dist')
let outFile = flag(arguments, '--out-file')
let extension = if flag(arguments, '--skip-extension') then '' else '.js'

if arguments.length > 1 and outFile {
  console.error("Can't specify --out-file with more than one input file")
  process.exit(1)
}

if arguments.length == 0 {
  let stdin = process.stdin
  let inputChunks = Array()

  stdin.resume()
  stdin.setEncoding('utf8')

  stdin.on('data', inputChunks.push)

  stdin.on('end', fn () {
    let puck = inputChunks.join()
    let js = buildString(puck)
    console.log(js)
  })
} else {
  let files = arguments.map(fn (file) then {
    file
    outFile: outFile or join(outDir, file.replace(RegExp('\\.puck$'), extension))
  })
  build(files)
}
